// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phone_type.proto

#include "phone_type.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace PHONE_TYPE
{
class PersonDefaultTypeInternal
{
  public:
    ::google::protobuf::internal::ExplicitlyConstructed<Person> _instance;
} _Person_default_instance_;
} // namespace PHONE_TYPE
namespace protobuf_phone_5ftype_2eproto
{
static void InitDefaultsPerson()
{
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    {
        void *ptr = &::PHONE_TYPE::_Person_default_instance_;
        new (ptr)::PHONE_TYPE::Person();
        ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
    }
    ::PHONE_TYPE::Person::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Person = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPerson}, {}};

void InitDefaults()
{
    ::google::protobuf::internal::InitSCC(&scc_info_Person.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor *file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PHONE_TYPE::Person, _has_bits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PHONE_TYPE::Person, _internal_metadata_),
    ~0u, // no _extensions_
    ~0u, // no _oneof_case_
    ~0u, // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PHONE_TYPE::Person, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PHONE_TYPE::Person, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PHONE_TYPE::Person, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PHONE_TYPE::Person, phone_type_),
    0,
    2,
    1,
    3,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, 9, sizeof(::PHONE_TYPE::Person)},
};

static ::google::protobuf::Message const *const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message *>(&::PHONE_TYPE::_Person_default_instance_),
};

void protobuf_AssignDescriptors()
{
    AddDescriptors();
    AssignDescriptors("phone_type.proto", schemas, file_default_instances, TableStruct::offsets, file_level_metadata,
                      file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce()
{
    static ::google::protobuf::internal::once_flag once;
    ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string &)
{
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl()
{
    InitDefaults();
    static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        "\n\020phone_type.proto\022\nPHONE_TYPE\"\\\n\006Person"
        "\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\005\022\r\n\005email\030\003 \001("
        "\t\022)\n\nphone_type\030\004 \001(\0162\025.PHONE_TYPE.Phone"
        "Type*8\n\tPhoneType\022\013\n\007UNKNOWN\020\000\022\n\n\006MOBILE"
        "\020\001\022\010\n\004HOME\020\002\022\010\n\004WORK\020\003"};
    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 182);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("phone_type.proto", &protobuf_RegisterTypes);
}

void AddDescriptors()
{
    static ::google::protobuf::internal::once_flag once;
    ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer
{
    StaticDescriptorInitializer()
    {
        AddDescriptors();
    }
} static_descriptor_initializer;
} // namespace protobuf_phone_5ftype_2eproto
namespace PHONE_TYPE
{
const ::google::protobuf::EnumDescriptor *PhoneType_descriptor()
{
    protobuf_phone_5ftype_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_phone_5ftype_2eproto::file_level_enum_descriptors[0];
}
bool PhoneType_IsValid(int value)
{
    switch (value)
    {
    case 0:
    case 1:
    case 2:
    case 3:
        return true;
    default:
        return false;
    }
}

// ===================================================================

void Person::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Person::kNameFieldNumber;
const int Person::kIdFieldNumber;
const int Person::kEmailFieldNumber;
const int Person::kPhoneTypeFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

Person::Person() : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
    ::google::protobuf::internal::InitSCC(&protobuf_phone_5ftype_2eproto::scc_info_Person.base);
    SharedCtor();
    // @@protoc_insertion_point(constructor:PHONE_TYPE.Person)
}
Person::Person(const Person &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), _has_bits_(from._has_bits_)
{
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.has_name())
    {
        name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.has_email())
    {
        email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    ::memcpy(&id_, &from.id_,
             static_cast<size_t>(reinterpret_cast<char *>(&phone_type_) - reinterpret_cast<char *>(&id_)) +
                 sizeof(phone_type_));
    // @@protoc_insertion_point(copy_constructor:PHONE_TYPE.Person)
}

void Person::SharedCtor()
{
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(&id_, 0,
             static_cast<size_t>(reinterpret_cast<char *>(&phone_type_) - reinterpret_cast<char *>(&id_)) +
                 sizeof(phone_type_));
}

Person::~Person()
{
    // @@protoc_insertion_point(destructor:PHONE_TYPE.Person)
    SharedDtor();
}

void Person::SharedDtor()
{
    name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Person::SetCachedSize(int size) const
{
    _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *Person::descriptor()
{
    ::protobuf_phone_5ftype_2eproto::protobuf_AssignDescriptorsOnce();
    return ::protobuf_phone_5ftype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Person &Person::default_instance()
{
    ::google::protobuf::internal::InitSCC(&protobuf_phone_5ftype_2eproto::scc_info_Person.base);
    return *internal_default_instance();
}

void Person::Clear()
{
    // @@protoc_insertion_point(message_clear_start:PHONE_TYPE.Person)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    cached_has_bits = _has_bits_[0];
    if (cached_has_bits & 3u)
    {
        if (cached_has_bits & 0x00000001u)
        {
            name_.ClearNonDefaultToEmptyNoArena();
        }
        if (cached_has_bits & 0x00000002u)
        {
            email_.ClearNonDefaultToEmptyNoArena();
        }
    }
    if (cached_has_bits & 12u)
    {
        ::memset(&id_, 0,
                 static_cast<size_t>(reinterpret_cast<char *>(&phone_type_) - reinterpret_cast<char *>(&id_)) +
                     sizeof(phone_type_));
    }
    _has_bits_.Clear();
    _internal_metadata_.Clear();
}

bool Person::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                                                                \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                                                              \
    goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:PHONE_TYPE.Person)
    for (;;)
    {
        ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second)
            goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag))
        {
        // optional string name = 1;
        case 1: {
            if (static_cast<::google::protobuf::uint8>(tag) ==
                static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */))
            {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, this->mutable_name()));
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                    this->name().data(), static_cast<int>(this->name().length()),
                    ::google::protobuf::internal::WireFormat::PARSE, "PHONE_TYPE.Person.name");
            }
            else
            {
                goto handle_unusual;
            }
            break;
        }

        // optional int32 id = 2;
        case 2: {
            if (static_cast<::google::protobuf::uint8>(tag) ==
                static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */))
            {
                set_has_id();
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                     ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(input,
                                                                                                          &id_)));
            }
            else
            {
                goto handle_unusual;
            }
            break;
        }

        // optional string email = 3;
        case 3: {
            if (static_cast<::google::protobuf::uint8>(tag) ==
                static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */))
            {
                DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, this->mutable_email()));
                ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
                    this->email().data(), static_cast<int>(this->email().length()),
                    ::google::protobuf::internal::WireFormat::PARSE, "PHONE_TYPE.Person.email");
            }
            else
            {
                goto handle_unusual;
            }
            break;
        }

        // optional .PHONE_TYPE.PhoneType phone_type = 4;
        case 4: {
            if (static_cast<::google::protobuf::uint8>(tag) ==
                static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */))
            {
                int value;
                DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                     int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(input, &value)));
                if (::PHONE_TYPE::PhoneType_IsValid(value))
                {
                    set_phone_type(static_cast<::PHONE_TYPE::PhoneType>(value));
                }
                else
                {
                    mutable_unknown_fields()->AddVarint(4, static_cast<::google::protobuf::uint64>(value));
                }
            }
            else
            {
                goto handle_unusual;
            }
            break;
        }

        default: {
        handle_unusual:
            if (tag == 0)
            {
                goto success;
            }
            DO_(::google::protobuf::internal::WireFormat::SkipField(input, tag,
                                                                    _internal_metadata_.mutable_unknown_fields()));
            break;
        }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:PHONE_TYPE.Person)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:PHONE_TYPE.Person)
    return false;
#undef DO_
}

void Person::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream *output) const
{
    // @@protoc_insertion_point(serialize_start:PHONE_TYPE.Person)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = _has_bits_[0];
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u)
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::SERIALIZE, "PHONE_TYPE.Person.name");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, this->name(), output);
    }

    // optional int32 id = 2;
    if (cached_has_bits & 0x00000004u)
    {
        ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
    }

    // optional string email = 3;
    if (cached_has_bits & 0x00000002u)
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::SERIALIZE, "PHONE_TYPE.Person.email");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, this->email(), output);
    }

    // optional .PHONE_TYPE.PhoneType phone_type = 4;
    if (cached_has_bits & 0x00000008u)
    {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(4, this->phone_type(), output);
    }

    if (_internal_metadata_.have_unknown_fields())
    {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(_internal_metadata_.unknown_fields(), output);
    }
    // @@protoc_insertion_point(serialize_end:PHONE_TYPE.Person)
}

::google::protobuf::uint8 *Person::InternalSerializeWithCachedSizesToArray(bool deterministic,
                                                                           ::google::protobuf::uint8 *target) const
{
    (void)deterministic; // Unused
    // @@protoc_insertion_point(serialize_to_array_start:PHONE_TYPE.Person)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = _has_bits_[0];
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u)
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::SERIALIZE, "PHONE_TYPE.Person.name");
        target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(1, this->name(), target);
    }

    // optional int32 id = 2;
    if (cached_has_bits & 0x00000004u)
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
    }

    // optional string email = 3;
    if (cached_has_bits & 0x00000002u)
    {
        ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormat::SERIALIZE, "PHONE_TYPE.Person.email");
        target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(3, this->email(), target);
    }

    // optional .PHONE_TYPE.PhoneType phone_type = 4;
    if (cached_has_bits & 0x00000008u)
    {
        target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(4, this->phone_type(), target);
    }

    if (_internal_metadata_.have_unknown_fields())
    {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields(), target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:PHONE_TYPE.Person)
    return target;
}

size_t Person::ByteSizeLong() const
{
    // @@protoc_insertion_point(message_byte_size_start:PHONE_TYPE.Person)
    size_t total_size = 0;

    if (_internal_metadata_.have_unknown_fields())
    {
        total_size +=
            ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(_internal_metadata_.unknown_fields());
    }
    if (_has_bits_[0 / 32] & 15u)
    {
        // optional string name = 1;
        if (has_name())
        {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());
        }

        // optional string email = 3;
        if (has_email())
        {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->email());
        }

        // optional int32 id = 2;
        if (has_id())
        {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(this->id());
        }

        // optional .PHONE_TYPE.PhoneType phone_type = 4;
        if (has_phone_type())
        {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->phone_type());
        }
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    SetCachedSize(cached_size);
    return total_size;
}

void Person::MergeFrom(const ::google::protobuf::Message &from)
{
    // @@protoc_insertion_point(generalized_merge_from_start:PHONE_TYPE.Person)
    GOOGLE_DCHECK_NE(&from, this);
    const Person *source = ::google::protobuf::internal::DynamicCastToGenerated<const Person>(&from);
    if (source == NULL)
    {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:PHONE_TYPE.Person)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    }
    else
    {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:PHONE_TYPE.Person)
        MergeFrom(*source);
    }
}

void Person::MergeFrom(const Person &from)
{
    // @@protoc_insertion_point(class_specific_merge_from_start:PHONE_TYPE.Person)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    cached_has_bits = from._has_bits_[0];
    if (cached_has_bits & 15u)
    {
        if (cached_has_bits & 0x00000001u)
        {
            set_has_name();
            name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
        }
        if (cached_has_bits & 0x00000002u)
        {
            set_has_email();
            email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
        }
        if (cached_has_bits & 0x00000004u)
        {
            id_ = from.id_;
        }
        if (cached_has_bits & 0x00000008u)
        {
            phone_type_ = from.phone_type_;
        }
        _has_bits_[0] |= cached_has_bits;
    }
}

void Person::CopyFrom(const ::google::protobuf::Message &from)
{
    // @@protoc_insertion_point(generalized_copy_from_start:PHONE_TYPE.Person)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

void Person::CopyFrom(const Person &from)
{
    // @@protoc_insertion_point(class_specific_copy_from_start:PHONE_TYPE.Person)
    if (&from == this)
        return;
    Clear();
    MergeFrom(from);
}

bool Person::IsInitialized() const
{
    return true;
}

void Person::Swap(Person *other)
{
    if (other == this)
        return;
    InternalSwap(other);
}
void Person::InternalSwap(Person *other)
{
    using std::swap;
    name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
    swap(id_, other->id_);
    swap(phone_type_, other->phone_type_);
    swap(_has_bits_[0], other->_has_bits_[0]);
    _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Person::GetMetadata() const
{
    protobuf_phone_5ftype_2eproto::protobuf_AssignDescriptorsOnce();
    return ::protobuf_phone_5ftype_2eproto::file_level_metadata[kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
} // namespace PHONE_TYPE
namespace google
{
namespace protobuf
{
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PHONE_TYPE::Person *Arena::CreateMaybeMessage<::PHONE_TYPE::Person>(Arena *arena)
{
    return Arena::CreateInternal<::PHONE_TYPE::Person>(arena);
}
} // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)
