// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person2.proto

#ifndef PROTOBUF_INCLUDED_person2_2eproto
#define PROTOBUF_INCLUDED_person2_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include "date_pkg.pb.h"
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h> // IWYU pragma: export
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/message.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h> // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_person2_2eproto

namespace protobuf_person2_2eproto
{
// Internal implementation detail -- do not use these members.
struct TableStruct
{
    static const ::google::protobuf::internal::ParseTableField entries[];
    static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
    static const ::google::protobuf::internal::ParseTable schema[1];
    static const ::google::protobuf::internal::FieldMetadata field_metadata[];
    static const ::google::protobuf::internal::SerializationTable serialization_table[];
    static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
} // namespace protobuf_person2_2eproto
namespace date
{
namespace module
{
class Person;
class PersonDefaultTypeInternal;
extern PersonDefaultTypeInternal _Person_default_instance_;
} // namespace module
} // namespace date
namespace google
{
namespace protobuf
{
template <>::date::module::Person *Arena::CreateMaybeMessage<::date::module::Person>(Arena *);
} // namespace protobuf
} // namespace google
namespace date
{
namespace module
{

// ===================================================================

class Person : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:date.module.Person) */
{
  public:
    Person();
    virtual ~Person();

    Person(const Person &from);

    inline Person &operator=(const Person &from)
    {
        CopyFrom(from);
        return *this;
    }
#if LANG_CXX11
    Person(Person &&from) noexcept : Person()
    {
        *this = ::std::move(from);
    }

    inline Person &operator=(Person &&from) noexcept
    {
        if (GetArenaNoVirtual() == from.GetArenaNoVirtual())
        {
            if (this != &from)
                InternalSwap(&from);
        }
        else
        {
            CopyFrom(from);
        }
        return *this;
    }
#endif
    inline const ::google::protobuf::UnknownFieldSet &unknown_fields() const
    {
        return _internal_metadata_.unknown_fields();
    }
    inline ::google::protobuf::UnknownFieldSet *mutable_unknown_fields()
    {
        return _internal_metadata_.mutable_unknown_fields();
    }

    static const ::google::protobuf::Descriptor *descriptor();
    static const Person &default_instance();

    static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
    static inline const Person *internal_default_instance()
    {
        return reinterpret_cast<const Person *>(&_Person_default_instance_);
    }
    static constexpr int kIndexInFileMessages = 0;

    void Swap(Person *other);
    friend void swap(Person &a, Person &b)
    {
        a.Swap(&b);
    }

    // implements Message ----------------------------------------------

    inline Person *New() const final
    {
        return CreateMaybeMessage<Person>(NULL);
    }

    Person *New(::google::protobuf::Arena *arena) const final
    {
        return CreateMaybeMessage<Person>(arena);
    }
    void CopyFrom(const ::google::protobuf::Message &from) final;
    void MergeFrom(const ::google::protobuf::Message &from) final;
    void CopyFrom(const Person &from);
    void MergeFrom(const Person &from);
    void Clear() final;
    bool IsInitialized() const final;

    size_t ByteSizeLong() const final;
    bool MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream *input) final;
    void SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream *output) const final;
    ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(bool deterministic,
                                                                       ::google::protobuf::uint8 *target) const final;
    int GetCachedSize() const final
    {
        return _cached_size_.Get();
    }

  private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const final;
    void InternalSwap(Person *other);

  private:
    inline ::google::protobuf::Arena *GetArenaNoVirtual() const
    {
        return NULL;
    }
    inline void *MaybeArenaPtr() const
    {
        return NULL;
    }

  public:
    ::google::protobuf::Metadata GetMetadata() const final;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // optional .date.module.Date birthday = 1;
    bool has_birthday() const;
    void clear_birthday();
    static const int kBirthdayFieldNumber = 1;

  private:
    const ::date::module::Date &_internal_birthday() const;

  public:
    const ::date::module::Date &birthday() const;
    ::date::module::Date *release_birthday();
    ::date::module::Date *mutable_birthday();
    void set_allocated_birthday(::date::module::Date *birthday);

    // optional int32 age = 2;
    bool has_age() const;
    void clear_age();
    static const int kAgeFieldNumber = 2;
    ::google::protobuf::int32 age() const;
    void set_age(::google::protobuf::int32 value);

    // optional int32 id = 3;
    bool has_id() const;
    void clear_id();
    static const int kIdFieldNumber = 3;
    ::google::protobuf::int32 id() const;
    void set_id(::google::protobuf::int32 value);

    // @@protoc_insertion_point(class_scope:date.module.Person)
  private:
    void set_has_birthday();
    void clear_has_birthday();
    void set_has_age();
    void clear_has_age();
    void set_has_id();
    void clear_has_id();

    ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::date::module::Date *birthday_;
    ::google::protobuf::int32 age_;
    ::google::protobuf::int32 id_;
    friend struct ::protobuf_person2_2eproto::TableStruct;
};
// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// Person

// optional .date.module.Date birthday = 1;
inline bool Person::has_birthday() const
{
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Person::set_has_birthday()
{
    _has_bits_[0] |= 0x00000001u;
}
inline void Person::clear_has_birthday()
{
    _has_bits_[0] &= ~0x00000001u;
}
inline const ::date::module::Date &Person::_internal_birthday() const
{
    return *birthday_;
}
inline const ::date::module::Date &Person::birthday() const
{
    const ::date::module::Date *p = birthday_;
    // @@protoc_insertion_point(field_get:date.module.Person.birthday)
    return p != NULL ? *p : *reinterpret_cast<const ::date::module::Date *>(&::date::module::_Date_default_instance_);
}
inline ::date::module::Date *Person::release_birthday()
{
    // @@protoc_insertion_point(field_release:date.module.Person.birthday)
    clear_has_birthday();
    ::date::module::Date *temp = birthday_;
    birthday_ = NULL;
    return temp;
}
inline ::date::module::Date *Person::mutable_birthday()
{
    set_has_birthday();
    if (birthday_ == NULL)
    {
        auto *p = CreateMaybeMessage<::date::module::Date>(GetArenaNoVirtual());
        birthday_ = p;
    }
    // @@protoc_insertion_point(field_mutable:date.module.Person.birthday)
    return birthday_;
}
inline void Person::set_allocated_birthday(::date::module::Date *birthday)
{
    ::google::protobuf::Arena *message_arena = GetArenaNoVirtual();
    if (message_arena == NULL)
    {
        delete reinterpret_cast<::google::protobuf::MessageLite *>(birthday_);
    }
    if (birthday)
    {
        ::google::protobuf::Arena *submessage_arena = NULL;
        if (message_arena != submessage_arena)
        {
            birthday = ::google::protobuf::internal::GetOwnedMessage(message_arena, birthday, submessage_arena);
        }
        set_has_birthday();
    }
    else
    {
        clear_has_birthday();
    }
    birthday_ = birthday;
    // @@protoc_insertion_point(field_set_allocated:date.module.Person.birthday)
}

// optional int32 age = 2;
inline bool Person::has_age() const
{
    return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Person::set_has_age()
{
    _has_bits_[0] |= 0x00000002u;
}
inline void Person::clear_has_age()
{
    _has_bits_[0] &= ~0x00000002u;
}
inline void Person::clear_age()
{
    age_ = 0;
    clear_has_age();
}
inline ::google::protobuf::int32 Person::age() const
{
    // @@protoc_insertion_point(field_get:date.module.Person.age)
    return age_;
}
inline void Person::set_age(::google::protobuf::int32 value)
{
    set_has_age();
    age_ = value;
    // @@protoc_insertion_point(field_set:date.module.Person.age)
}

// optional int32 id = 3;
inline bool Person::has_id() const
{
    return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Person::set_has_id()
{
    _has_bits_[0] |= 0x00000004u;
}
inline void Person::clear_has_id()
{
    _has_bits_[0] &= ~0x00000004u;
}
inline void Person::clear_id()
{
    id_ = 0;
    clear_has_id();
}
inline ::google::protobuf::int32 Person::id() const
{
    // @@protoc_insertion_point(field_get:date.module.Person.id)
    return id_;
}
inline void Person::set_id(::google::protobuf::int32 value)
{
    set_has_id();
    id_ = value;
    // @@protoc_insertion_point(field_set:date.module.Person.id)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)

} // namespace module
} // namespace date

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_INCLUDED_person2_2eproto
